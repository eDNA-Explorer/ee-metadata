name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

# Minimal permissions for security
permissions:
  contents: read
  id-token: write # Required for trusted publishing to PyPI

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'pypi' }}
    
    steps:
    # Pin to specific commit SHA for security
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
    
    - name: Set up Python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1.4.1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Build package
      run: poetry build
    
    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'testpypi'
      env:
        POETRY_REPOSITORIES_TESTPYPI_URL: https://test.pypi.org/legacy/
        POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: poetry publish --repository testpypi
    
    - name: Publish to PyPI
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'pypi')
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: poetry publish